ЁЯУШ ReactJS Documentation Notes
1. ReactJS Introduction

ReactJS рж╣рж▓рзЛ Facebook (Meta) ржжрзНржмрж╛рж░рж╛ рждрзИрж░рж┐ ржХрж░рж╛ ржПржХржЯрж┐ JavaScript рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ред

ржорзВрж▓ ржХрж╛ржЬ тЖТ UI (User Interface) ржмрж╛ржирж╛ржирзЛред

ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:

Component Based Architecture

Declarative (UI ржХрзЗржоржи рж╣ржмрзЗ рж╕рзЗржЯрж╛ ржмрж▓рзЗ ржжрж╛ржУ, React рж╕рзЗржЯрж╛ ржмрж╛ржирж╛рзЯ)

Virtual DOM ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ fast rendering

Reusable Components

2. Core Concepts
a) Components

Components = ржЫрзЛржЯ ржЫрзЛржЯ reusable UI ржЕржВрж╢ред

ржжрзБржЗ ржзрж░ржирзЗрж░ Component:

Functional Component (modern, hooks ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ)

Class Component (ржкрзБрж░ржирзЛ style, ржПржЦржи ржХржо ржмрзНржпржмрж╣рж╛рж░ рж╣рзЯ)

b) JSX (JavaScript XML)

JavaScript + HTML ржорж┐рж╢рзНрж░ syntaxред

Example:

const element = <h1>Hello React!</h1>;

c) Props

Props = Properties

Component ржП data ржкрж╛ржарж╛ржирзЛрж░ ржЙржкрж╛рзЯред

Example:

function Welcome(props) {
  return <h1>Hello, {props.name}</h1>;
}

d) State

Component ржПрж░ ржнрзЗрждрж░рзЗрж░ data ржпрзЗржЯрж╛ ржкрж░рж┐ржмрж░рзНрждржи рж╣рждрзЗ ржкрж╛рж░рзЗред

Functional Component ржП тЖТ useState hook ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред

import { useState } from "react";

function Counter() {
  const [count, setCount] = useState(0);

  return (
    <div>
      <p>{count}</p>
      <button onClick={() => setCount(count + 1)}>Increase</button>
    </div>
  );
}

e) Events

React ржП events camelCase рж╣рзЯ: onClick, onChange ржЗрждрзНржпрж╛ржжрж┐ред

<button onClick={handleClick}>Click Me</button>

3. React Hooks
a) useState

State ржорзНржпрж╛ржирзЗржЬ ржХрж░рж╛рж░ ржЬржирзНржпред

b) useEffect

Side effects (API call, timer, DOM update) ржХрж░рж╛рж░ ржЬржирзНржпред

c) useContext

Props drilling ржЫрж╛рзЬрж╛ржЗ data рж╢рзЗрзЯрж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржпред

d) useRef

DOM element ржмрж╛ mutable value ржзрж░рж╛рж░ ржЬржирзНржпред

e) useReducer

Complex state management ржПрж░ ржЬржирзНржпред

4. React Lifecycle (Class Component ржП ржмрзЗрж╢рж┐ ржмрзНржпржмрж╣рзГржд)

Mounting тЖТ componentDidMount

Updating тЖТ componentDidUpdate

Unmounting тЖТ componentWillUnmount

(Functional components ржП ржПржЧрзБрж▓рзЛ useEffect ржжрж┐рзЯрзЗ handle ржХрж░рж╛ рж╣рзЯ)

5. React Router

Single Page Application (SPA) ржмрж╛ржирж╛рждрзЗ ржмрзНржпржмрж╣рзГрждред

ржкрзЗржЬ ржкрж░рж┐ржмрж░рзНрждржи ржирж╛ ржХрж░рзЗ URL ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯред

Example:

import { BrowserRouter, Routes, Route, Link } from "react-router-dom";

function App() {
  return (
    <BrowserRouter>
      <nav>
        <Link to="/">Home</Link>
        <Link to="/about">About</Link>
      </nav>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/about" element={<About />} />
      </Routes>
    </BrowserRouter>
  );
}

6. React with API

Fetch API ржмрж╛ Axios ржжрж┐рзЯрзЗ ржбрзЗржЯрж╛ ржЖржирж╛ рж╣рзЯред

рж╕рж╛ржзрж╛рж░ржгржд useEffect ржПрж░ ржнрзЗрждрж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред

import { useEffect, useState } from "react";

function Users() {
  const [users, setUsers] = useState([]);

  useEffect(() => {
    fetch("https://jsonplaceholder.typicode.com/users")
      .then(res => res.json())
      .then(data => setUsers(data));
  }, []);

  return (
    <ul>
      {users.map(user => <li key={user.id}>{user.name}</li>)}
    </ul>
  );
}

7. Advanced Topics

Context API тЖТ global state managementред

Redux / Zustand / Recoil тЖТ ржмрзЬ ржкрзНрж░рзЛржЬрзЗржХрзНржЯрзЗ state managementред

React Query / SWR тЖТ API data cache + syncред

Custom Hooks тЖТ ржирж┐ржЬрзЗрж░ hook ржмрж╛ржирж┐рзЯрзЗ reuse ржХрж░рж╛ ржпрж╛рзЯред

8. React Best Practices

тЬЕ Components ржЫрзЛржЯ рж░рж╛ржЦрж╛
тЬЕ Meaningful ржирж╛ржо ржжрзЗржУрзЯрж╛
тЬЕ Reusable component ржмрж╛ржирж╛ржирзЛ
тЬЕ Folder structure ржарж┐ржХ рж░рж╛ржЦрж╛
тЬЕ PropTypes / TypeScript ржжрж┐рзЯрзЗ type-checking

9. React Project Structure (Basic)
my-app/
  тФЬтФАтФА public/
  тФЬтФАтФА src/
  тФВ   тФЬтФАтФА components/
  тФВ   тФВ   тФФтФАтФА Navbar.jsx
  тФВ   тФЬтФАтФА pages/
  тФВ   тФВ   тФФтФАтФА Home.jsx
  тФВ   тФЬтФАтФА App.jsx
  тФВ   тФЬтФАтФА index.jsx
  тФВ   тФФтФАтФА styles/
  тФВ       тФФтФАтФА App.css
  тФЬтФАтФА package.json
